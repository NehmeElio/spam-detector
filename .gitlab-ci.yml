stages:
  - test
  - build
  - deploy

variables:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: $DOCKERHUB_USERNAME
  DOCKER_PASSWORD: $DOCKERHUB_PASSWORD
  FRONTEND_IMAGE: $DOCKER_USERNAME/spam-detector-frontend
  BACKEND_IMAGE: $DOCKER_USERNAME/spam-detector-backend

# Basic frontend test
# frontend-test:
#   stage: test
#   image: node:22-slim
#   script:
#     - cd frontend/spam-detector-frontend
#     - npm install
#     - npm test -- --passWithNoTests

# Basic backend test
# backend-test:
#   stage: test
#   image: python:3.12-slim
#   script:
#     - cd ml_service
#     - pip install -r requirements.txt
#     - pip install pytest fastapi httpx
#     - python -m pytest -v

# # Build and push frontend Docker image
# build-frontend:
#   stage: build
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - docker build -t $FRONTEND_IMAGE:latest -f frontend/spam-detector-frontend/Dockerfile .
#     - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#     - docker push $FRONTEND_IMAGE:latest
#   only:
#     - main

# # Build and push backend Docker image
# build-backend:
#   stage: build
#   image: docker:latest
#   services:
#     - docker:dind
#   script:
#     - docker build -t $BACKEND_IMAGE:latest -f ml_service/Dockerfile .
#     - docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
#     - docker push $BACKEND_IMAGE:latest
#   only:
#     - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache curl bash
    # Download the Koyeb CLI binary with verbose logging to verify the download
    - curl -fsSL https://raw.githubusercontent.com/koyeb/koyeb-cli/master/install.sh | sh
    # Check if the file is actually a binary, not an HTML page
    - export PATH="/root/.koyeb/bin:$PATH"
    # Verify that koyeb is available
    - mkdir -p ~/.koyeb
    - |
      echo "api_key: \"$KOYEB_API_KEY\"" > ~/.koyeb/koyeb.yaml
    # Verify Koyeb CLI installation
    # Verify Koyeb CLI installation
    - koyeb --help 
 # This will verify if the Koyeb CLI is accessible
  script:
    # Login to Koyeb with the API key
    - koyeb login --token $KOYEB_API_KEY
    # Redeploy the backend and frontend
    - koyeb service redeploy spam-detector-backend/backend
    - koyeb service redeploy spam-detector-frontend/frontend
  only:
    - main

